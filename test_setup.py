#!/usr/bin/env python3
"""
Quick test to validate the AutoScholar setup
"""

def test_imports():
    """Test if all required packages can be imported."""
    try:
        import groq
        print("‚úÖ groq package imported successfully")
        
        import PyPDF2
        print("‚úÖ PyPDF2 package imported successfully")
        
        from dotenv import load_dotenv
        print("‚úÖ python-dotenv package imported successfully")
        
        print("\nüìã Testing project modules...")
        
        from utils import extract_text_from_pdf, call_groq_api
        print("‚úÖ utils module imported successfully")
        
        from phd_student_agent import PhDStudentAgent
        print("‚úÖ phd_student_agent module imported successfully")
        
        from postdoc_agent import PostdocAgent
        print("‚úÖ postdoc_agent module imported successfully")
        
        from professor_agent import ProfessorAgent
        print("‚úÖ professor_agent module imported successfully")
        
        print("\nüéâ All imports successful! AutoScholar is ready to run.")
        return True
        
    except ImportError as e:
        print(f"‚ùå Import error: {e}")
        return False

def test_api_connection():
    """Test if GROQ API connection works."""
    try:
        from config import GROQ_API_KEY, GROQ_MODEL
        from groq import Groq
        
        client = Groq(api_key=GROQ_API_KEY)
        
        # Simple test call
        response = client.chat.completions.create(
            model=GROQ_MODEL,
            messages=[{"role": "user", "content": "Hello, respond with 'API connection successful'"}],
            max_tokens=50
        )
        
        result = response.choices[0].message.content
        print(f"üåê API Test Response: {result}")
        print("‚úÖ GROQ API connection successful!")
        return True
        
    except Exception as e:
        print(f"‚ùå API connection error: {e}")
        return False

if __name__ == "__main__":
    print("üß™ AUTOSCHOLAR SETUP VALIDATION")
    print("=" * 50)
    
    # Test imports
    imports_ok = test_imports()
    
    if imports_ok:
        print("\n" + "=" * 50)
        # Test API
        api_ok = test_api_connection()
        
        if api_ok:
            print("\nüéâ Setup validation completed successfully!")
            print("You can now run: python main.py")
        else:
            print("\n‚ö†Ô∏è  API connection failed. Please check your GROQ API key.")
    else:
        print("\n‚ö†Ô∏è  Some packages are missing. Please install requirements.")
